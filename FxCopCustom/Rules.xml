<?xml version="1.0" encoding="utf-8" ?>
<Rules FriendlyName="カスタムルール">
	<Rule CheckId="DT0001" Category="FxCopCustom" TypeName="CompareZeroToCountResult">
		<Name>CompareZeroToCountResult</Name>
		<Description>System.Linq.Enumerable.Countメソッドの結果が直接比較された場合を検出する</Description>
		<Url />
		<Resolution Name="Error">【エラー】評価結果が常にtrueです。</Resolution>
		<Resolution Name="Take">LINQのCountメソッドの呼び出しはIEnumerableインスタンスを評価するため、結果を直接比較しません。IList.CountまたはArray.Lengthプロパティを使用するか、"(IEnumerable).Take(2).Any()" のように修正し、性能劣化を防いでください。</Resolution>
		<Resolution Name="Any">LINQのCountメソッドの呼び出しはIEnumerableインスタンスを評価するため、結果を直接比較しません。IList.CountまたはArray.Lengthプロパティを使用するか、"(IEnumerable).Any()" のように修正し、性能劣化を防いでください。</Resolution>
		<Resolution Name="SkipAny">LINQのCountメソッドの呼び出しはIEnumerableインスタンスを評価するため、結果を直接比較しません。IList.CountまたはArray.Lengthプロパティを使用するか、"(IEnumerable).Skip(4).Any()" のように修正し、性能劣化を防いでください。</Resolution>
		<Resolution Name="TakeCount">LINQのCountメソッドの呼び出しはIEnumerableインスタンスを評価するため、結果を直接比較しません。IList.CountまたはArray.Lengthプロパティを使用するか、"(IEnumerable).Take(4).Count() == 3" のように修正し、性能劣化を防いでください。</Resolution>
		<Email />
		<MessageLevel Certainty="80">Warning</MessageLevel>
		<FixCategories>NonBreaking</FixCategories>
		<Owner />
	</Rule>
	<Rule CheckId="DT0002" Category="FxCopCustom" TypeName="UnusedReasign">
		<Name>UnusedReasign</Name>
		<Description>ローカル変数へ代入した値が使用されずに再代入された場合を検出する</Description>
		<Url />
		<Resolution>ローカル変数が使用されずに再代入されています。直前の代入を除去するか、再代入の前に使用してください。</Resolution>
		<Email />
		<MessageLevel Certainty="80">Warning</MessageLevel>
		<FixCategories>NonBreaking</FixCategories>
		<Owner />
	</Rule>
	<Rule CheckId="DT0003" Category="FxCopCustom" TypeName="ConcatConstString">
		<Name>ConcatConstString</Name>
		<Description>固定文字列が再連結されています。</Description>
		<Url />
		<Resolution>固定文字列"{0}"と"{1}"が連結されています。</Resolution>
		<Resolution Name="OverrideByLocal">固定文字列"{0}"と"{1}"が連結されています。</Resolution>
		<Email />
		<MessageLevel Certainty="80">Warning</MessageLevel>
		<FixCategories>NonBreaking</FixCategories>
		<Owner />
	</Rule>
	<Rule CheckId="DT0004" Category="FxCopCustom" TypeName="LinqResultComparedByNull">
		<Name>LinqResultComparedByNull</Name>
		<Description>LINQのクエリ結果がnullと比較されている場合を検出する。</Description>
		<Url />
		<Resolution>LINQのクエリ結果{0}がnullと比較されています。LINQのクエリ結果は常にイテレータのため、nullになることがありません。この比較演算は不要です。</Resolution>
		<Email />
		<MessageLevel Certainty="80">Warning</MessageLevel>
		<FixCategories>NonBreaking</FixCategories>
		<Owner />
	</Rule>
	<Rule CheckId="DT0005" Category="FxCopCustom" TypeName="AsignedConstOnly">
		<Name>AsignedConstOnly</Name>
		<Description>固定値のみが代入されたローカル値を検出する。</Description>
		<Url />
		<Resolution>ローカル変数{0}には固定値のみが代入されています。</Resolution>
		<Email />
		<MessageLevel Certainty="80">Warning</MessageLevel>
		<FixCategories>NonBreaking</FixCategories>
		<Owner />
	</Rule>
	<Rule CheckId="DT0006" Category="FxCopCustom" TypeName="StaticMethodShouldNotCallDateTimeNow">
		<Name>StaticMethodShouldNotCallDateTimeNow</Name>
		<Description>staticメソッド内のDateTime.Nowの使用禁止</Description>
		<Url />
		<Resolution>DateTime.Nowはメソッドパラメータとして外部から与えてください。</Resolution>
		<Email />
		<MessageLevel Certainty="80">Warning</MessageLevel>
		<FixCategories>NonBreaking</FixCategories>
		<Owner />
	</Rule>
	<Rule CheckId="DT0007" Category="FxCopCustom" TypeName="DontUseMethod">
		<Name>DontUseMethod</Name>
		<Description>使用禁止として設定されたメソッドを検出します。</Description>
		<Url />
		<Resolution>{0}メソッドの使用は禁止されています。</Resolution>
		<Email />
		<MessageLevel Certainty="80">Warning</MessageLevel>
		<FixCategories>NonBreaking</FixCategories>
		<Owner />
	</Rule>
	<Rule CheckId="DT0008" Category="FxCopCustom" TypeName="DontDefineMember">
		<Name>DontDefineMember</Name>
		<Description>定義禁止として設定されたメソッドを検出します。</Description>
		<Url />
		<Resolution>{0}</Resolution>
		<Email />
		<MessageLevel Certainty="80">Warning</MessageLevel>
		<FixCategories>NonBreaking</FixCategories>
		<Owner />
	</Rule>
	<Rule CheckId="DT0009" Category="FxCopCustom" TypeName="NeedToCatch">
		<Name>NeedToCatch</Name>
		<Description>メソッドのcatchすべき例外検出します。</Description>
		<Url />
		<Resolution>{0}</Resolution>
		<Email />
		<MessageLevel Certainty="80">Warning</MessageLevel>
		<FixCategories>NonBreaking</FixCategories>
		<Owner />
	</Rule>
</Rules>